/**! fjl.errorThrowing.js 0.7.3 | License: ISC | md5checksum: cb52a8c0078643be3fea7e18ebfb056f | Built-on: Sat Nov 11 2017 17:50:05 GMT-0500 (Eastern Standard Time) **/this.fjl=this.fjl||{},this.fjl.errorThrowing=function(e,r){"use strict";var t=function(e){return r.isString(e)||r.isFunction(e)},o=function(e,o){if(!t(o))throw new Error(e+" expects Types to be checked against to be of type `String` or `Function`.  Type received `"+r.typeOf(o)+"`.  Value `"+o+"`.");return o},n=function(e){return o("getTypeName",e)&&r.isString(e)?e:e.name},f=function(e,t){return r._isType(n(e),t)||r.isFunction(e)&&r.isset(t)&&t instanceof e},u=function(e){return r.length(e)?r.intercalate(", ",r.map(function(e){return"`"+n(e)+"`"},e)):""},a=function(e){var t=e.contextName,o=e.valueName,n=e.value,f=e.expectedTypeName,a=e.foundTypeName,i=e.messageSuffix,p=r.isArray(f),y=p?"of type":"of one of the types",T=p?u(f):f;return(t?"`"+t+".":"`")+o+"` is not "+y+": "+T+".  Type received: "+a+".  Value: "+n+";"+(i?"  "+i+";":"")},i=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f;return function(o,f,u,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,p=n(o),y=r.typeOf(a);if(!t(o,a))throw new Error(e({contextName:f,valueName:u,value:a,expectedTypeName:p,foundTypeName:y,messageSuffix:i}))}},p=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f;return function(o,f,u,a){var i=o.map(n),p=o.some(function(e){return t(e,a)}),y=r.typeOf(a);if(!p)throw new Error(e({contextName:f,valueName:u,value:a,expectedTypeName:i,foundTypeName:y}))}},y=i(a),T=p(a),c=r.curry(f),s=r.curry(y),l=r.curry4(T),N=function(e){return r.curry(i(e))},h=function(e){return r.curry4(p(e))},g={defaultTypeChecker$:f,defaultTypeChecker:c,getTypeName:n,multiTypesToString:u,defaultErrorMessageCall:a,errorIfNotType$:y,errorIfNotType:s,errorIfNotTypes$:T,errorIfNotTypes:l,getErrorIfNotTypeThrower$:i,getErrorIfNotTypeThrower:N,getErrorIfNotTypesThrower$:p,getErrorIfNotTypesThrower:h};return e.isCheckableType=t,e.errorIfNotCheckableType=o,e.getTypeName=n,e.defaultTypeChecker$=f,e.multiTypesToString=u,e.defaultErrorMessageCall=a,e.getErrorIfNotTypeThrower$=i,e.getErrorIfNotTypesThrower$=p,e.errorIfNotType$=y,e.errorIfNotTypes$=T,e.defaultTypeChecker=c,e.errorIfNotType=s,e.errorIfNotTypes=l,e.getErrorIfNotTypeThrower=N,e.getErrorIfNotTypesThrower=h,e.default=g,e.version="0.7.3",e}({},fjl);